
maincpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ee  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000142  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000142  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000174  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000072e  00000000  00000000  000001d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000542  00000000  00000000  000008fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d8  00000000  00000000  00000e40  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001118  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000032a  00000000  00000000  0000113c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001f8  00000000  00000000  00001466  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000165e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	5a c0       	rjmp	.+180    	; 0xea <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:



int main(void)
{
	DDRD |= (1<<PD4);
  38:	8c 9a       	sbi	0x11, 4	; 17
	PORTD |= (1<<PD4);
  3a:	94 9a       	sbi	0x12, 4	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  3c:	2f e3       	ldi	r18, 0x3F	; 63
  3e:	8d e0       	ldi	r24, 0x0D	; 13
  40:	93 e0       	ldi	r25, 0x03	; 3
  42:	21 50       	subi	r18, 0x01	; 1
  44:	80 40       	sbci	r24, 0x00	; 0
  46:	90 40       	sbci	r25, 0x00	; 0
  48:	e1 f7       	brne	.-8      	; 0x42 <__SREG__+0x3>
  4a:	00 c0       	rjmp	.+0      	; 0x4c <__SREG__+0xd>
  4c:	00 00       	nop
	_delay_ms(1000);
	PORTD &= ~(1<<PD4);
  4e:	94 98       	cbi	0x12, 4	; 18
  50:	2f e3       	ldi	r18, 0x3F	; 63
  52:	8d e0       	ldi	r24, 0x0D	; 13
  54:	93 e0       	ldi	r25, 0x03	; 3
  56:	21 50       	subi	r18, 0x01	; 1
  58:	80 40       	sbci	r24, 0x00	; 0
  5a:	90 40       	sbci	r25, 0x00	; 0
  5c:	e1 f7       	brne	.-8      	; 0x56 <__SREG__+0x17>
  5e:	00 c0       	rjmp	.+0      	; 0x60 <__SREG__+0x21>
  60:	00 00       	nop
	_delay_ms(1000);
	PORTD |= (1<<PD4);
  62:	94 9a       	sbi	0x12, 4	; 18
  64:	2f e3       	ldi	r18, 0x3F	; 63
  66:	8d e0       	ldi	r24, 0x0D	; 13
  68:	93 e0       	ldi	r25, 0x03	; 3
  6a:	21 50       	subi	r18, 0x01	; 1
  6c:	80 40       	sbci	r24, 0x00	; 0
  6e:	90 40       	sbci	r25, 0x00	; 0
  70:	e1 f7       	brne	.-8      	; 0x6a <__SREG__+0x2b>
  72:	00 c0       	rjmp	.+0      	; 0x74 <__SREG__+0x35>
  74:	00 00       	nop
	_delay_ms(1000);
	PORTD &= ~(1<<PD4);
  76:	94 98       	cbi	0x12, 4	; 18
  78:	2f e3       	ldi	r18, 0x3F	; 63
  7a:	8d e0       	ldi	r24, 0x0D	; 13
  7c:	93 e0       	ldi	r25, 0x03	; 3
  7e:	21 50       	subi	r18, 0x01	; 1
  80:	80 40       	sbci	r24, 0x00	; 0
  82:	90 40       	sbci	r25, 0x00	; 0
  84:	e1 f7       	brne	.-8      	; 0x7e <__SREG__+0x3f>
  86:	00 c0       	rjmp	.+0      	; 0x88 <__SREG__+0x49>
  88:	00 00       	nop
	_delay_ms(1000);
	PORTD |= (1<<PD4);
  8a:	94 9a       	sbi	0x12, 4	; 18
  8c:	2f e3       	ldi	r18, 0x3F	; 63
  8e:	8d e0       	ldi	r24, 0x0D	; 13
  90:	93 e0       	ldi	r25, 0x03	; 3
  92:	21 50       	subi	r18, 0x01	; 1
  94:	80 40       	sbci	r24, 0x00	; 0
  96:	90 40       	sbci	r25, 0x00	; 0
  98:	e1 f7       	brne	.-8      	; 0x92 <__SREG__+0x53>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <__SREG__+0x5d>
  9c:	00 00       	nop
	_delay_ms(1000);
	PORTD &= ~(1<<PD4);
  9e:	94 98       	cbi	0x12, 4	; 18
  a0:	2f e3       	ldi	r18, 0x3F	; 63
  a2:	8d e0       	ldi	r24, 0x0D	; 13
  a4:	93 e0       	ldi	r25, 0x03	; 3
  a6:	21 50       	subi	r18, 0x01	; 1
  a8:	80 40       	sbci	r24, 0x00	; 0
  aa:	90 40       	sbci	r25, 0x00	; 0
  ac:	e1 f7       	brne	.-8      	; 0xa6 <__SREG__+0x67>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <__SREG__+0x71>
  b0:	00 00       	nop
	_delay_ms(1000);
	PORTD |= (1<<PD4);
  b2:	94 9a       	sbi	0x12, 4	; 18
  b4:	2f e3       	ldi	r18, 0x3F	; 63
  b6:	8d e0       	ldi	r24, 0x0D	; 13
  b8:	93 e0       	ldi	r25, 0x03	; 3
  ba:	21 50       	subi	r18, 0x01	; 1
  bc:	80 40       	sbci	r24, 0x00	; 0
  be:	90 40       	sbci	r25, 0x00	; 0
  c0:	e1 f7       	brne	.-8      	; 0xba <__SREG__+0x7b>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <__SREG__+0x85>
  c4:	00 00       	nop
	_delay_ms(1000);
	PORTD &= ~(1<<PD4);
  c6:	94 98       	cbi	0x12, 4	; 18
  c8:	2f e3       	ldi	r18, 0x3F	; 63
  ca:	8d e0       	ldi	r24, 0x0D	; 13
  cc:	93 e0       	ldi	r25, 0x03	; 3
  ce:	21 50       	subi	r18, 0x01	; 1
  d0:	80 40       	sbci	r24, 0x00	; 0
  d2:	90 40       	sbci	r25, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <__SREG__+0x8f>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <__SREG__+0x99>
  d8:	00 00       	nop
	//rtcSetTime();
	
    /* Replace with your application code */
    while (1) 
    {
	if (! (PIND & (1<<PD2)))
  da:	82 99       	sbic	0x10, 2	; 16
  dc:	03 c0       	rjmp	.+6      	; 0xe4 <__SREG__+0xa5>
	{
		DDRD |= (1<<PD4);
  de:	8c 9a       	sbi	0x11, 4	; 17
		PORTD |= (1<<PD4);
  e0:	94 9a       	sbi	0x12, 4	; 18
  e2:	fb cf       	rjmp	.-10     	; 0xda <__SREG__+0x9b>
	}
	else
	{
		DDRD |= (1<<PD4);
  e4:	8c 9a       	sbi	0x11, 4	; 17
		PORTD &= ~(1<<PD4);
  e6:	94 98       	cbi	0x12, 4	; 18
  e8:	f8 cf       	rjmp	.-16     	; 0xda <__SREG__+0x9b>

000000ea <_exit>:
  ea:	f8 94       	cli

000000ec <__stop_program>:
  ec:	ff cf       	rjmp	.-2      	; 0xec <__stop_program>
